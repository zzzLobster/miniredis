name: Publish Artifacts

on:
  release:
    types: [published]

jobs:
  buildLinuxExecutable:
    name: Build Executable for Linux
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: Build executable
      run: go build -o miniredis ./main/main.go
    - name: Test
      run: make
    - name: Upload to release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./miniredis
        asset_name: miniredis.linux-amd64.bin
        asset_content_type: application/octet-stream

  buildAlpineLinuxExecutable:
    name: Build Executable for Alpine Linux
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Build executable
      run: docker run --rm --mount type=bind,source="$(pwd)",target=/opt/code golang:1.16-alpine sh -c 'cd /opt/code && go build -o miniredis ./main/main.go'
    - name: Upload to release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./miniredis
        asset_name: miniredis.alpine-amd64.bin
        asset_content_type: application/octet-stream

  buildMacOSExecutable:
    name: Build Executable for MacOS
    runs-on: macos-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: Build executable
      run: go build -o miniredis ./main/main.go
    - name: Test
      run: make
    - name: Upload to release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./miniredis
        asset_name: miniredis.macos-amd64.bin
        asset_content_type: application/octet-stream
